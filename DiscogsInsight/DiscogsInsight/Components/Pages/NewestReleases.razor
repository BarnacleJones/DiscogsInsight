@page "/newest"
@using DiscogsInsight.View.Services.Collection
@using DiscogsInsight.View.Services.Releases
@using DiscogsInsight.ViewModels.EntityViewModels
@using DiscogsInsight.DataAccess.Services
@using DiscogsInsight.View.Services.Notifications
@using DiscogsInsight.ViewModels.Results
@inject UserNotificationService UserNotificationService
@inject ReleaseViewService ReleaseViewService
@inject CollectionViewService CollectionViewService
@inject NavigationManager NavigationManager

        
    @if (_hasKey)
    {
        <RadzenText Text="Newest 5 Releases" TextStyle="TextStyle.DisplayH4" />
        <br />           

        <div class="rz-p-sm-12">            
            @if (_latestReleases != null)
            {
                foreach (var item in _latestReleases)
                {
                    <ReleaseComponent Release="@item" />
                }
            }
        </div>
    }
    else
    {
        <EnterUsernameComponent OnStoreUsernameClick="handleButtonClick" />
    }


@code{
    private static bool _hasKey { get; set; }
    private string discogsUsername = string.Empty;
    private List<ReleaseViewModel>? _latestReleases;

    public void handleButtonClick()
    {
        Preferences.Default.Set("discogsUsername", discogsUsername);
        _hasKey = true;
    }

    protected override async Task OnInitializedAsync()
    {
        _hasKey = Preferences.Default.ContainsKey("discogsUsername");
        if (_hasKey)
        {
            var ensureCollectionIsSeeded = await CollectionViewService.GetCollection();
            HandleNewestReleaseResult(await ReleaseViewService.GetNewestReleases());
        }
    }
    
    private async void HandleNewestReleaseResult(ViewResult<List<ReleaseViewModel>> result)
    {
        if (result.Success)
        {
            _latestReleases = result.Data;
        }
        else
        {
            await UserNotificationService.DisplayNotification("Error", $"{result.ErrorMessage}", "OK", "Cancel");
        }
    }
}