@page "/artist/{artistId:int?}"

@using System.Collections.ObjectModel
@using DiscogsInsight.ViewModels.EntityViewModels
@using DiscogsInsight.View.Services.Artist
@using DiscogsInsight.ViewModels
@using DiscogsInsight.ViewModels.Results
@using DiscogsInsight.View.Services.Notifications
@using Radzen
@inject UserNotificationService UserNotificationService
@inject ArtistViewService ArtistViewService
@inject NavigationManager _navigationManager

@if (_artist is null)
{
    <LoadingComponent />
}
else
{
    <MudStack AlignItems="AlignItems.Center">
        <MudText Typo="Typo.h6">Artist</MudText>
        <MudSpacer />
        <ArtistComponent Artist="_artist" />
    </MudStack>
}

@code
{
    [Parameter]
    public int? artistId { get; set; }
    private ArtistViewModel? _artist;

    protected override async Task OnInitializedAsync()
    {
        try
        {            
            HandleResult(await ArtistViewService.GetArtist(artistId));
        }
        catch (Exception ex)
        {
            await UserNotificationService.DisplayNotification("Error", $"{ex.Message}", "OK", "Cancel");            
        }
    }

    private async void HandleResult(ViewResult<ArtistViewModel> result)
    {
        if (result.Success)
            _artist = result.Data;
        else
           await UserNotificationService.DisplayNotification("Error", $"{result.ErrorMessage}", "OK", "Cancel");
    }
}
