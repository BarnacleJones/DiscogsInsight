@page "/randomRelease"

@using DiscogsInsight.Services
@using DiscogsInsight.ResponseModels
@using System.Collections.ObjectModel
@using DiscogsInsight.ViewModels
@using DiscogsInsight.Components.Pages
@inject ReleaseService ReleaseService
@inject NavigationManager _navigationManager

@if (_release is null)
{
    <p>Loading...</p>
}
else
{
    <ReleaseComponent Release="@_release" />
    <RadzenButton Click=@(args => RefreshPage()) Icon="refresh" ButtonStyle="ButtonStyle.Light" />    
}

@code
{
    private ReleaseViewModel? _release;

    protected override async Task OnInitializedAsync()
    {
        try
        {            
            _release = await ReleaseService.GetRandomRelease();
        }
        catch (Exception ex)
        {
        }
    }

    public async Task RefreshPage()
    {
        await OnInitializedAsync();
        StateHasChanged();
    }

}
