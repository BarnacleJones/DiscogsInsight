@page "/randomRelease"

@using System.Collections.ObjectModel
@using DiscogsInsight.Service.Releases
@using DiscogsInsight.Service.Models
@using DiscogsInsight.Components
@using DiscogsInsight.Service.Models.EntityViewModels
@using DiscogsInsight.Service.Notifications
@using DiscogsInsight.Service.Models.Results
@inject UserNotificationService UserNotificationService
@inject ReleaseViewService ReleaseViewService
@inject NavigationManager _navigationManager

@if (_release is null)
{
    <LoadingComponent />
}
else
{
    <MudStack AlignItems="MudBlazor.AlignItems.Center" Elevation="0">
        <ReleaseComponent Release="@_release" ShowRefreshRelease="true" OnButtonClick="RefreshPage" />
    </MudStack>
}

@code
{
    private ReleaseViewModel? _release;

    protected override async Task OnInitializedAsync()
    {          
        HandleRandomResult(await ReleaseViewService.GetRandomRelease());        
    }

    public async Task RefreshPage()
    {
        await OnInitializedAsync();
        StateHasChanged();
    }

    private async void HandleRandomResult(ViewResult<ReleaseViewModel> result)
    {
        if (result.Success)
        {
            _release = result.Data;
            StateHasChanged();
        }
        else
        {
            await UserNotificationService.DisplayNotification("Error", $"{result.ErrorMessage}", "OK", "Cancel");
        }
    }

}
