@page "/randomRelease"

@using System.Collections.ObjectModel
@using DiscogsInsight.View.Services.Releases
@using DiscogsInsight.ViewModels
@using DiscogsInsight.Components
@using DiscogsInsight.ViewModels.EntityViewModels
@inject ReleaseViewService ReleaseViewService
@inject NavigationManager _navigationManager

@if (_release is null)
{
    <div class="d-flex justify-content-center">
        <div class="row">
            <div class="col-12">
                <img src="images/loading.svg" />
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <p><em>Loading...</em></p>
            </div>
        </div>
    </div>
}
else
{
    <RadzenText Text="Random" TextStyle="TextStyle.DisplayH4" />
    <RadzenCard>
        <RadzenRow JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" Gap="">
            <RadzenColumn Size="12" class="d-flex justify-content-center">
                <RadzenButton Click=@(args => RefreshPage()) Icon="refresh" ButtonStyle="ButtonStyle.Light" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" Gap="">
            <RadzenColumn Size="12">
                <ReleaseComponent Release="@_release"/>
            </RadzenColumn>
        </RadzenRow>

    </RadzenCard>
}

@code
{
    private ReleaseViewModel? _release;

    protected override async Task OnInitializedAsync()
    {
        try
        {            
            _release = await ReleaseViewService.GetRandomRelease();
        }
        catch (Exception ex)
        {
            //todo
        }
    }

    public async Task RefreshPage()
    {
        await OnInitializedAsync();
        StateHasChanged();
    }

}
