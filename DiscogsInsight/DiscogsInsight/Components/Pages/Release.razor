@page "/release/{releaseId:int?}"

@using System.Collections.ObjectModel
@using DiscogsInsight.Service.Releases
@using DiscogsInsight.Service.Models
@using DiscogsInsight.Components
@using DiscogsInsight.Service.Models.EntityViewModels
@using DiscogsInsight.Service.Notifications
@using DiscogsInsight.Service.Models.Results
@inject UserNotificationService UserNotificationService
@inject ReleaseViewService ReleaseViewService

@if (_release is null)
{
    <LoadingComponent />
}
else
{
    <ReleaseComponent Release="@_release" ShowRefreshRelease="false" />
}

@code
{
    [Parameter]
    public int? releaseId { get; set; }
    private ReleaseViewModel? _release;

    protected override async Task OnInitializedAsync()
    {
        try
        {            
            HandleResult(await ReleaseViewService.GetRelease(releaseId));
        }
        catch (Exception ex)
        {
            await UserNotificationService.DisplayNotification("Error", $"{ex.Message}", "OK", "Cancel");
        }
    }

    private async void HandleResult(ViewResult<ReleaseViewModel> result)
    {
        if (result.Success)
        {
            _release = result.Data;
            StateHasChanged();
        }
        else
        {
            await UserNotificationService.DisplayNotification("Error", $"{result.ErrorMessage}", "OK", "Cancel");
        }
    }
}
