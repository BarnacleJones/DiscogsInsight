@page "/collectionGrid"
@using DiscogsInsight.ViewModels.Collection
@using DiscogsInsight.View.Services.Collection
@using DiscogsInsight.ViewModels.EntityViewModels
@using DiscogsInsight.View.Services.Notifications
@using DiscogsInsight.ViewModels.Results
@inject UserNotificationService UserNotificationService
@inject NavigationManager NavigationManager
@inject CollectionViewService CollectionViewService

@if (_collectionViewModel == null)
{
    <div class="d-flex justify-content-center">
        <div class="row">
            <div class="col-12">
                <img src="images/loading.svg" />
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <p><em>Loading...</em></p>
            </div>
        </div>
    </div>
}
else{
    <RadzenText TextStyle="TextStyle.H4">Collection</RadzenText>
    <RadzenDataGrid 
        AllowFiltering="true" AllowColumnResize="true" 
        AllowAlternatingRows="false" 
        FilterMode="FilterMode.Advanced" 
        AllowSorting="true" 
        PageSize="50" 
        AllowPaging="true"
        Style="width: 100%"
        PagerHorizontalAlign="HorizontalAlign.Left" 
        ShowPagingSummary="true"
        Data="@_collectionViewModel.Releases?.OrderBy(x => x.Artist)" 
        TItem="ReleaseViewModel"
        LogicalFilterOperator="LogicalFilterOperator.Or">
        <Columns>
            <RadzenDataGridColumn 
                TItem="ReleaseViewModel" Property="Artist" 
                Title="Artist" 
                Width="50%"             
                TextAlign="TextAlign.Left">
                    <Template Context="data">
                    <RadzenLink class="m-1" onclick=@(() => GoToArtist(data.DiscogsArtistId)) Text="@data.Artist"></RadzenLink>
                    </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn 
                TItem="ReleaseViewModel" Property="Title" 
                Title="Album" 
                Width="50%" 
                TextAlign="TextAlign.Left">
                <Template Context="data">
                    <RadzenLink class="m-1" onclick=@(() => GoToRelease(data.DiscogsReleaseId)) Text="@data.Title"></RadzenLink>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}
@code {
    private DiscogsCollectionViewModel? _collectionViewModel;
   
    protected override async Task OnInitializedAsync()
    {
        try
        {
            HandleResult(await CollectionViewService.GetCollection());
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error", $"An error occurred: {ex.Message}", "OK");

        }
    }

    void GoToArtist(int? discogsArtistId)
    {
        NavigationManager.NavigateTo("artist/" + discogsArtistId);
    }

    void GoToRelease(int? releaseId)
    {
        NavigationManager.NavigateTo($"release/{releaseId}");
    }
    
    private async void HandleResult(ViewResult<DiscogsCollectionViewModel> result)
    {
        if (result.Success)
        {
            _collectionViewModel = result.Data;
        }
        else
        {
            await UserNotificationService.DisplayNotification("Error", $"{result.ErrorMessage}", "OK", "Cancel");
        }
    }
}