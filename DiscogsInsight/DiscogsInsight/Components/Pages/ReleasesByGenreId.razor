@page "/ReleasesByGenreId/{genreId:int}"
@using DiscogsInsight.Service.Releases
@using DiscogsInsight.Service.Notifications
@using DiscogsInsight.Service.Models.EntityViewModels
@using DiscogsInsight.Service.Models.Results
@inject UserNotificationService UserNotificationService
@inject ReleaseViewService ReleaseViewService
@inject NavigationManager NavigationManager

@if (_releasesOfThisGenre != null)
{
    <MudStack AlignItems="MudBlazor.AlignItems.Center">
        <MudText Typo="Typo.h6">@_thisGenre Releases</MudText>
        <MudSpacer />
        <MudStack Class="mud-width-full" Style="height:180vh" >
            @foreach (var item in _releasesOfThisGenre)
                {
                    <ReleaseComponent Release="@item" />                  
                }
        </MudStack>
    </MudStack>
}
else
{
    <LoadingComponent />
}


@code{

    [Parameter]
    public int discogsGenreTagId { get; set; }

    private int internalGenreId { get; set; }

    public List<ReleaseViewModel>? _releasesOfThisGenre;
    public string? _thisGenre = "";

    protected override async Task OnInitializedAsync()
    {
        internalGenreId = discogsGenreTagId;
        HandleReleaseByGenreResult(await ReleaseViewService.GetReleasesByDiscogsGenreTagId(discogsGenreTagId));
    }

    /// <summary>
    /// This override checks if the value set when page first initialises is the same as the changing parameter.
    /// It will refresh the page if they do not match.
    /// https://stackoverflow.com/questions/64008372/c-sharp-blazor-onparameterssetasync-is-being-called-even-though-params-has-not-b
    /// </summary>
    /// <returns></returns>
    protected override async Task OnParametersSetAsync()
    {
       if (internalGenreId != discogsGenreTagId)
       {
            HandleReleaseByGenreResult(await ReleaseViewService.GetReleasesByDiscogsGenreTagId(discogsGenreTagId));            
       }
    }
    
    private async void HandleReleaseByGenreResult(ViewResult<List<ReleaseViewModel>> result)
    {
        if (result.Success)
        {
            _releasesOfThisGenre = result.Data;
            _thisGenre = result.ErrorMessage;//hack!
        }
        else
        {
            await UserNotificationService.DisplayNotification("Error", $"{result.ErrorMessage}", "OK", "Cancel");
        }
    }
}