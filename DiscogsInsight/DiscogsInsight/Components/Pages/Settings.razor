@page "/settings"
@using DiscogsInsight.View.Services.Notifications
@using DiscogsInsight.View.Services.Settings
@using DiscogsInsight.ViewModels.Results
@using Microsoft.Maui.Controls
@inject NavigationManager NavigationManager
@inject SettingsViewService SettingsViewService
@inject UserNotificationService UserNotificationService

<div class="container mt-5">
    <div class="row mb-3">
        <RadzenText Text="Settings" TextStyle="TextStyle.DisplayH4" />
    </div>
    <div class="row mb-3">
        <div class="col-md-12">
            <p>Change your Discogs username. <strong><br />Warning: </strong>This will DELETE all of your saved collection data. The task will take a while to complete for larger collections.</p>
        </div>
        <div class="col-12 col-md-6 mb-3">
            <label for="userNameInput">Discogs Username:</label>
            <input type="text" class="form-control" @bind="discogsUsername">
        </div>
        <div class="col-12 col-md-6 mb-3">
            <button class="btn btn-primary" @onclick="SaveUsername">Save</button>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-md-12">
            <p>Fetch your collection data to update. <strong><br/>Warning: </strong>Deletes items no longer in your Discogs collection from the local db.</p>
            
            <button class="btn btn-primary" @onclick="UpdateApiData">Refresh Collection Data</button>
        </div>
    </div>
</div>

@code {
    private string discogsUsername = string.Empty;

    public async void SaveUsername()
    {
        HandleResult(await SettingsViewService.UpdateDiscogsUsername(discogsUsername), "Saved Username");
    }

    public async Task UpdateApiData()
    {
        HandleResult(await SettingsViewService.UpdateCollection(), "Updated Collection");
    }

    protected override void OnInitialized()
    {
        discogsUsername = SettingsViewService.GetDiscogsUsername();
    }

    private async void HandleResult(ViewResult<bool> result, string successMessage)
    {
        if (result.Success)
        {
            await UserNotificationService.DisplayNotification("Success", successMessage, "OK", "Cancel");
        }
        else
        {
            await UserNotificationService.DisplayNotification("Error", $"{result.ErrorMessage}", "OK", "Cancel");
        }
    }
}