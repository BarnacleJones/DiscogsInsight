@page "/fetchdata"

@using DiscogsInsight.Services
@using DiscogsInsight.ResponseModels
@using System.Collections.ObjectModel
@using DiscogsInsight.ViewModels
@inject CollectionService CollectionService


@if (_collectionResponse == null)
{
    <p><em>Loading your entire collection from Discogs and putting it in the database...</em></p>
    <p><em>This could take some time.</em></p>
}

else
{
    <div class="container mt-4">
        <h1>Discogs Collection</h1>

        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">

            @foreach (var release in _collectionResponse.Releases.OrderBy(r => r.Artist))
            {
                if (release is null)
                    continue;

                <div class="col">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@release.Artist</h5>
                            <p class="card-text"><strong>Title:</strong> @release.Title</p>
                            <p class="card-text"><strong>Year:</strong> @release.Year</p>
                            <p class="card-text"><strong>Date Added:</strong> @release.DateAdded.ToString()</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code
{
    private DiscogsCollection _collectionResponse;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _collectionResponse = await CollectionService.GetCollection();

        }
        catch (Exception ex)
        {
            Console.WriteLine("Error", $"An error occurred: {ex.Message}", "OK");

        }
    }

}
