@page "/correctArtistData/{releaseId:int?}"

@using DiscogsInsight.View.Services.Notifications
@using DiscogsInsight.View.Services.Releases
@using DiscogsInsight.ViewModels.Results
@inject UserNotificationService UserNotificationService
@inject ReleaseViewService ReleaseViewService

@* @if (_release is null)
{
    <LoadingComponent />
}
else
{
    //build up a list of possible artists with some general detail
    //once one is chosen, correct the information and when that is success redirect to the release for that artist
} *@

@code
{
    [Parameter]
    public int? releaseId { get; set; }
    // private ReleaseViewModel? _release;

    protected override async Task OnInitializedAsync()
    {
        try
        {            
            // HandleResult(await ReleaseViewService.GetRelease(releaseId));
        }
        catch (Exception ex)
        {
            await UserNotificationService.DisplayNotification("Error", $"{ex.Message}", "OK", "Cancel");
        }
    }

    // private async void HandleResult(ViewResult<ReleaseViewModel> result)
    // {
    //     if (result.Success)
    //     {
    //         _release = result.Data;
    //         StateHasChanged();
    //     }
    //     else
    //     {
    //         await UserNotificationService.DisplayNotification("Error", $"{result.ErrorMessage}", "OK", "Cancel");
    //     }
    // }
}
