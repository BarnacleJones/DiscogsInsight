@page "/releasesByYear/{releaseYear:int?}"
@using DiscogsInsight.Service.Services.Releases
@using DiscogsInsight.ViewModels.EntityViewModels
@using DiscogsInsight.Service.Services.Notifications
@using DiscogsInsight.ViewModels.Results
@inject UserNotificationService UserNotificationService
@inject ReleaseViewService ReleaseViewService
@inject NavigationManager NavigationManager

@if (_releasesThisYear != null)
{
    <MudStack AlignItems="MudBlazor.AlignItems.Center">
        <MudText Typo="Typo.h6">Releases from @releaseYear</MudText>
        <MudSpacer />
        <MudCarousel 
            Class="mud-width-full" 
            Style="height:180vh" 
            ShowArrows="true" 
            ArrowsPosition="Position.Start" 
            ShowBullets="false" 
            BulletsPosition="Position.Top" 
            EnableSwipeGesture="true" 
            AutoCycle="false" 
            TData="List<ReleaseViewModel>">
                @foreach (var item in _releasesThisYear)
                {
                    <MudCarouselItem 
                        Transition="Transition.Slide" 
                        Color="@Color.Dark" >                                
                            <MudSpacer />                               
                            <ReleaseComponent Release="@item" />
                    </MudCarouselItem>
                }
        </MudCarousel>
    </MudStack>
}
else
{
    <LoadingComponent />
}


@code{

    [Parameter]
    public int? releaseYear { get; set; }

    public List<ReleaseViewModel>? _releasesThisYear;

    protected override async Task OnInitializedAsync()
    {
        HandleReleaseByYearResult(await ReleaseViewService.GetReleasesByYear(releaseYear));
    }
    
    private async void HandleReleaseByYearResult(ViewResult<List<ReleaseViewModel>> result)
    {
        if (result.Success)
        {
            _releasesThisYear = result.Data;
        }
        else
        {
            await UserNotificationService.DisplayNotification("Error", $"{result.ErrorMessage}", "OK", "Cancel");
        }
    }
}